# Generated by Django 5.1.4 on 2025-03-30 19:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='Способ доставки')),
            ],
            options={
                'verbose_name': 'Способ доставки',
                'verbose_name_plural': 'Способы доставки',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_type', models.CharField(choices=[('amount', 'Скидка в рублях'), ('percentage', 'Скидка в %')], db_index=True, max_length=20, verbose_name='Тип скидки')),
                ('discount_value', models.DecimalField(db_index=True, decimal_places=0, max_digits=20, verbose_name='Размер скидки')),
            ],
            options={
                'verbose_name': 'Скидка для клиента',
                'verbose_name_plural': 'Скидки для клиентов',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_last_name', models.CharField(db_index=True, max_length=255, verbose_name='Фамилия Имя Отчество')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='Электронная почта')),
                ('phone', models.CharField(db_index=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Телефон должен быть в формате: +7 (XXX) XXX-XX-XX, 8 (XXX) XXX-XX-XX, +7XXXXXX или 8XXXXXXXXXX, где X - цифры.', regex='^(?:\\+7|8)\\s*\\(?\\d{3}\\)?\\s*\\d{3}-\\d{2}-\\d{2}$|^(?:\\+7|8)\\d{10}$')], verbose_name='Телефон')),
                ('region', models.CharField(max_length=250, verbose_name='Регион')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('address', models.CharField(max_length=250, verbose_name='Адрес')),
                ('postal_code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message='Индекс должен состоять только из 6 цифр.', regex='^\\d{6}$')], verbose_name='Почтовый индекс')),
                ('passport_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Паспортные данные должны состоять из 10 цифр.', regex='^\\d{10}$')], verbose_name='Паспортные данные')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('my_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий, скрытый от покупателя')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('paid', models.BooleanField(db_index=True, default=False, verbose_name='Товар Оплачен')),
                ('zamena_product', models.BooleanField(default=True, verbose_name='Предлагать замену товара')),
                ('strahovat_gruz', models.BooleanField(default=True, verbose_name='Застраховать груз')),
                ('soglasie_na_obrabotku_danyh', models.BooleanField(default=True, verbose_name='Согласие на обработку персональных данных')),
                ('soglasie_na_uslovie_sotrudnichestva', models.BooleanField(default=True, verbose_name='Согласие с условиями сотрудничества')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('obrabotka', 'В обработке'), ('oplata', 'Ожидает оплаты'), ('assembled', 'Собран'), ('canceled', 'Отменен'), ('pending', 'В ожидании')], db_index=True, default='new', max_length=20, verbose_name='Статус заказа')),
                ('price_delivery', models.DecimalField(blank=True, db_index=True, decimal_places=0, max_digits=10, null=True, verbose_name='Цена доставки')),
                ('delivery_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.deliverymethod', verbose_name='Способ доставки')),
                ('discount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.discount', verbose_name='Скидка')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(db_index=True, decimal_places=0, max_digits=10, verbose_name='Цена')),
                ('quantity', models.PositiveIntegerField(db_index=True, default=1, verbose_name='Количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='home.product', verbose_name='Название товара')),
                ('size', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.size', verbose_name='Размер')),
            ],
            options={
                'verbose_name': 'Заказанный товар',
                'verbose_name_plural': 'Заказанные товары',
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['-created'], name='orders_orde_created_743fca_idx'),
        ),
    ]
